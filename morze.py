import random  # Передаем библиотеку для генерации случайных значений


def morse_encode(element):  # Элементом является слово, из списка, его получим рандомно с помощью 2ой функции
    """
  (Функция 1) для перевода английского слова в шифр Морзе
  """
    morse = ''  # Строка с будущими символами шифра Морзе
    english_letter = ''.join(element)  # Английские буквы словаря(используем join, чтобы получить str, а не list)
    for i in english_letter:  # Используем цикл for…in, чтобы перебрать каждую английскую букву словаря
        morse += morse_code.get(i) + ''  # Достаем из словаря value и складываем в имеющуюся строку morse
    return morse  # Возращаем morse


def random_words(words_to_translate):  # Элементом является слово, из списка
    """
  (Функция 2) для получения случайного слова из списка
  """
    random_word = random.sample(words_to_translate,
                                1)  # Используем метод sample чтобы взять элемент из списка. Второй аргумент, это кол-во элементов.
    result = ''.join(random_word)  # Чтобы результат не был списком, используем join
    return result  # Возращаем результат


def print_stats(answers):  # Элементом является булевы значения списка answers
    '''
  (Функция 3) для вывода статистики
  '''
    true_counter = 0  # Счетчик правильных ответов
    false_counter = 0  # Счетчик не правильных ответов
    questions_lenght = len(answers)  # Кол-во вопросов
    print("----------------------------")  # Сделано для красоты и читаемости конечного вывода
    print(f"Всего вопросов: {questions_lenght}")  # Вывод количества вопросов
    for i in answers:  # Используем цикл for..in чтобы перебрать элементы и сложить в счетчики
        if i == True:  # Если ответ верный,
            true_counter += 1  # счетчик правильных ответов увеличивается
        elif i == False:  # Если ответ неверный,
            false_counter += 1  # счетчик неправильных ответов увеличивается
    print(f"Отвечено верно: {true_counter}")  # Вывод правильных ответов
    print(f"Отвечено неверно: {false_counter}\nПопробуешь еще раз?")  # Вывод неправильных ответов


words_to_translate = ["execute",  # Список слов для перевода в Морзе
                      "guillotine",
                      "escapism",
                      "pain",
                      "blood",
                      "knife",
                      "resurrection",
                      "love",
                      "hate",
                      "violence"]

answers = []  # Список ответов пользователя

morse_code = {  # Словарь дешифратор en to Morse
    "a": ".-",
    "b": "-...",
    "c": "-.-.",
    "d": "-..",
    "e": ".",
    "f": "..-.",
    "g": "--.",
    "h": "....",
    "i": "..",
    "j": ".---",
    "k": "-.-",
    "l": ".-..",
    "m": "--",
    "n": "-.",
    "o": "---",
    "p": ".--.",
    "q": "--.-",
    "r": ".-.",
    "s": "...",
    "t": "-",
    "u": "..-",
    "v": "...-",
    "w": ".--",
    "x": "-..-",
    "y": "-.--",
    "z": "--..",
}
# Вывод для пользователя - старт программы -
print("Мы с тобой поиграем в игру, готовься, будет больно >:)\nНажми Enter чтобы начать")
input()  # сделано для красоты

for i in range(5):  # Используем цикл for..in range, чтобы перебрать именно 5 слов из нашего списка
    random_wrd = random_words(words_to_translate)  # Объявляем новые переменные,
    morse_wrd = morse_encode(random_wrd)  # присваивая им готовые функции
    print(f"Слово: {i + 1} {morse_wrd}")  # Вывод для пользователя - слово в Морзе(i+1 - чтобы отсчет начался с 1‑го)
    user_answer = input("Введите ваш ответ: ")  # Ввод пользователя
    if user_answer == random_wrd:  # Используем условный оператор, чтобы сравнить ответ пользователя,
        print()  # если ответ верный, то говорим об этом, и добавляем через append-
        print(f"Верно! Ответ: {random_wrd}")  # булево значение в наш список answers
        answers.append(True)
    else:  # Вариация если ответ был неверным такая же,
        print()  # но с другим булевым значением
        print(f"НЕВЕРНО! Правильно будет: {random_wrd}")
        answers.append(False)
    words_to_translate.remove(
        random_wrd)  # удаляем через метод remove слова которые уже использовали, чтобы исключить повторение

print_stats(answers)  # Выводим статистику через нашу Функцию 3